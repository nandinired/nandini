version: 0.2
phases:
  install:
    runtime-versions:
      python: 3.7
    commands:
      - python --version
  pre_build:
    commands:
      - export STARTTIME=`date +%s`
      - export BUILDNAME="$GIT_BRANCH-`date +%Y-%m-%d`"
      - export BRANCH="$GIT_BRANCH"
      - export SOURCE_VERSION="$CODEBUILD_SOURCE_VERSION"
      - export FUNCTION_NAME="$LAMBDA_TO_UPDATE"
      - export username="$GITUSER"
      - export pass="$GITPASSWORD"
      - echo "BRANCH $BRANCH"
      - echo "SOURCE_VERSION $SOURCE_VERSION"
      
  build:
    commands:
      - echo Build started on `date`
      - aws s3 sync . s3://datasync-test1212/test/
      - efslocation=$(aws datasync create-location-efs --subdirectory /sapper/ --efs-filesystem-arn 'arn:aws:elasticfilesystem:us-east-1:916127912776:file-system/fs-72480987' --ec2-config SecurityGroupArns='arn:aws:ec2:us-east-1:916127912776:security-group/sg-075b1f5dded812045',SubnetArn='arn:aws:ec2:us-east-1:916127912776:subnet/subnet-0a0331d3800b5ef7a' --region us-east-1 | awk 'NF{ print $NF }' | sed 's/{//g' | sed 's/"//g' | sed 's/}//g')
      - sleep 3
      - s3location=$(aws datasync create-location-s3 --s3-bucket-arn 'arn:aws:s3:::datasync-test1212' --s3-storage-class 'STANDARD' --s3-config 'BucketAccessRoleArn=arn:aws:iam::916127912776:role/datasyncs3' --subdirectory /test --region us-east-1 | awk 'NF{ print $NF }' | sed 's/{//g' | sed 's/"//g' | sed 's/}//g')
      - echo $efslocation
      - echo $s3location
      - loggroup=$(aws logs create-log-group --log-group-name testefs1294)
      - echo $loggroup
      - task=$(aws datasync create-task --source-location-arn $s3location --destination-location-arn $efslocation --cloud-watch-log-group-arn "arn:aws:logs:us-east-1:916127912776:log-group:testefs1234" --name testefs123 --region us-east-1 | awk 'NF{ print $NF }' | sed 's/{//g' | sed 's/"//g' | sed 's/}//g')
        #aws lambda update-function-code --function-name test1 --s3-bucket test-buildartifactsbucket --s3-key source.zip
      - sleep 3
      - aws datasync start-task-execution --task-arn $task
      - echo "buhhhhhfesferdsfdsfhhl"
  post_build:
    commands:
      - echo Build completed on `date`
      - pwd
      - ls -al
artifacts:
  files:
    - '**/*'
